cmake_minimum_required(VERSION 3.5)
project(startalk)

set(CMAKE_CXX_STANDARD 14)

if(UNIX)
    add_definitions("-Wall -g")
    set(QT_HOME /usr/local/opt/qt5)
    set(CMAKE_CXX_FLAGS -fPIC)
    include_directories(/usr/local/opt/openssl/include)
    include_directories(/usr/local/include)
    link_directories(/usr/local/opt/openssl/lib)
    link_directories(/usr/local/lib)
endif ()

if (APPLE)

elseif (UNIX)
    include_directories(/usr/include/x86_64-linux-gnu/qt5)
    include_directories(/usr/include/x86_64-linux-gnu/qt5/QtCore)
    include_directories(/usr/include/x86_64-linux-gnu/qt5/QtWidgets)
    include_directories(/usr/include/x86_64-linux-gnu/qt5/QtGui)
    include_directories(${QT_HOME}/include)
    link_directories(${QT_HOME}/lib)
else ()
    ADD_DEFINITIONS(-D_WINDOWS)
    add_definitions(-DUNICODE)
    add_definitions(-D_UNICODE)
    ADD_DEFINITIONS(-DZLIB_WINAPI)

    include_directories(Depends/zlib/include)
    include_directories(Depends/curl/include)
    include_directories(Depends/openssl/include)
    include_directories(Depends/protobuf/include)

    if (CMAKE_CL_64)
        set(CMAKE_GENERATOR_PLATFORM x64)
        set(PROJECTNAME_ARCHITECTURE "amd64")

        link_directories(Depends/curl/lib/windows/x64)
        link_directories(Depends/openssl/lib/windows/x64)
        link_directories(Depends/protobuf/lib/windows/x64)
        link_directories(Depends/zlib/lib/windows/x64)
        link_directories(Depends/amr/lib/x64)

        link_directories(Depends/qzxing/lib/x64)
       
    else ()
        link_directories(Depends/zlib/lib/windows/win32)
        link_directories(Depends/curl/lib/windows/x86)
        link_directories(Depends/openssl/lib/windows/x86)
        link_directories(Depends/protobuf/lib/windows/x86)
        link_directories(Depends/amr/lib/x86)
        link_directories(Depends/amr/lib/x86)

        link_directories(Depends/qzxing/lib/x86)
        message(win32)
    endif ()

    if(NOT DEFINED ENV{QTDIR})
        message("please set qt venv")
    else()
        set(QT_HOME $ENV{QTDIR})
    endif()
endif ()

message("use qt path:" ${QT_HOME})
set(CMAKE_PREFIX_PATH ${QT_HOME})

ADD_DEFINITIONS(-D_STARTALK)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
link_directories(.)
link_directories(..)

if (NOT WIN32)
    add_subdirectory(qzxing)
endif()
add_subdirectory(EventBus)
add_subdirectory(quazip)
add_subdirectory(Util)
add_subdirectory(LogicBase)
add_subdirectory(Screenshot)
add_subdirectory(breakpad)
add_subdirectory(LogicManager)
add_subdirectory(CustomUi)
add_subdirectory(DataCenter)
add_subdirectory(Emoticon)
add_subdirectory(UIPictureBrowser)
add_subdirectory(DataBasePlug)
add_subdirectory(WebService)
add_subdirectory(UILoginPlug)
add_subdirectory(UITitlebarPlug)
add_subdirectory(UINavigationPlug)
add_subdirectory(UIChatViewPlug)
add_subdirectory(LogicCommunication)
add_subdirectory(UICardManager)
add_subdirectory(UIGroupManager)
add_subdirectory(UIAddressBook)
add_subdirectory(UIOAManager)
add_subdirectory(StarTalk)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
