cmake_minimum_required(VERSION 3.12)
project(qtalk_v2)

set(CMAKE_CXX_STANDARD 14)

if(UNIX)
    set(QT_HOME /usr/local/opt/qt/)
    set(CMAKE_CXX_FLAGS -fPIC)
    include_directories(/usr/local/opt/openssl/include)
    include_directories(/usr/local/include)
    link_directories(/usr/local/opt/openssl/lib)
    link_directories(/usr/local/lib)
endif ()

if (APPLE)

elseif (UNIX)
    include_directories(/usr/include/x86_64-linux-gnu/qt5)
    include_directories(/usr/include/x86_64-linux-gnu/qt5/QtCore)
    include_directories(/usr/include/x86_64-linux-gnu/qt5/QtWidgets)
    include_directories(/usr/include/x86_64-linux-gnu/qt5/QtGui)
    include_directories(${QT_HOME}/include)
    link_directories(${QT_HOME}/lib)
else ()
    ADD_DEFINITIONS(-D_WINDOWS)

    include_directories(Depends/zlib/include)
    include_directories(Depends/curl/include)
    include_directories(Depends/openssl/include)
    include_directories(Depends/protobuf/include)

    if (PLATFORM_32BIT STREQUAL "ON")
        ADD_DEFINITIONS(-DPLATFORM_WIN32)
        set(CMAKE_GENERATOR_PLATFORM x86)
        set(PROJECTNAME_ARCHITECTURE "x86")
        set(QT_HOME C:/QtNew/5.13.2/msvc2017)

        link_directories(Depends/zlib/lib/windows/win32)
        link_directories(Depends/curl/lib/windows/x86)
        link_directories(Depends/openssl/lib/windows/x86)
        link_directories(Depends/protobuf/lib/windows/x86)
        link_directories(Depends/amr/lib/x86)
        link_directories(Depends/amr/lib/x86)
        link_directories(Depends/quazip/lib/x86)
        link_directories(Depends/qzxing/lib/x86)
        link_directories(Depends/QtUtil/lib/x86)
        link_directories(Depends/EventBus/lib/x86)
        link_directories(Depends/Screenshot/lib/x86)
    else ()
        ADD_DEFINITIONS(-DPLATFORM_WIN64)
        set(CMAKE_GENERATOR_PLATFORM x64)
        set(PROJECTNAME_ARCHITECTURE "amd64")

        set(QT_HOME C:/QtNew/5.13.2/msvc2017_64)
        link_directories(Depends/curl/lib/windows/x64)
        link_directories(Depends/zlib/lib/windows/x64)
        link_directories(Depends/openssl/lib/windows/x64)
        link_directories(Depends/protobuf/lib/windows/x64)
        link_directories(Depends/zlib/lib/windows/x64)
        link_directories(Depends/zlib/lib/windows/x64)
        link_directories(Depends/amr/lib/x64)

        link_directories(Depends/quazip/lib/x64)
        link_directories(Depends/qzxing/lib/x64)
        link_directories(Depends/QtUtil/lib/x64)
        link_directories(Depends/EventBus/lib/x64)
        link_directories(Depends/Screenshot/lib/x64)
    endif ()

    link_directories(${QT_HOME}/lib)
    include_directories(${QT_HOME}/include)
    include_directories(${QT_HOME}/include/QtWebChannel)
    include_directories(${QT_HOME}/include/QtWebEngineWidgets)
    include_directories(${QT_HOME}/include/QtWebEngineCore)

endif ()

set(CMAKE_PREFIX_PATH ${QT_HOME})

link_directories(.)
link_directories(..)


if (QCHAT STREQUAL "ON")
    ADD_DEFINITIONS(-D_QCHAT)
endif ()

if (STARTALK STREQUAL "ON")
    ADD_DEFINITIONS(-D_STARTALK)
endif ()

if (ATALK STREQUAL "ON")
    ADD_DEFINITIONS(-D_ATALK)
endif ()

#if(MSVC)
#    set(CMAKE_EXE_LINKER_FLAGS
#            "${CMAKE_EXE_LINKER_FLAGS} /NODEFAULTLIB")
#endif()

if (NOT WIN32)
    add_subdirectory(EventBus)
    add_subdirectory(quazip)
    add_subdirectory(Screenshot)
    add_subdirectory(QtUtil)
	add_subdirectory(qzxing)
endif()
add_subdirectory(UICom)
add_subdirectory(LogicManager)
add_subdirectory(CustomUi)
add_subdirectory(Platform)
add_subdirectory(Emoticon)
add_subdirectory(UIPictureBrowser)
add_subdirectory(DataBasePlug)
add_subdirectory(WebService)
add_subdirectory(UILoginPlug)
add_subdirectory(UITitlebarPlug)
add_subdirectory(UINavigationPlug)
add_subdirectory(UIChatViewPlug)
add_subdirectory(LogicCommunication)
add_subdirectory(UICardManager)
add_subdirectory(UIGroupManager)
add_subdirectory(UIAddressBook)
add_subdirectory(UIOAManager)
add_subdirectory(QTalk)

set(CMAKE_INCLUDE_CURRENT_DIR ON)